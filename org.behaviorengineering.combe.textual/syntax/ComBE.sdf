%% Grammar for the ComBE language
module ComBE

imports Common

exports

  context-free start-symbols
  
    Start

  context-free syntax
 
    "#RT" Requirement* Component* ("#T" Root)?				-> Start {"Specification"}
    
    ID Label												-> Requirement {"Requirement"}
    
    %% TODO: make enum?
	"#C" ID Label BehaviorSeq*								-> Component {"StandardComponent"}
	"#SC" ID Label BehaviorSeq*								-> Component {"SystemComponent"}
	
	BehaviorType behavior:Behavior*							-> BehaviorSeq {"BehaviorSeq"}
	
	INT Label												-> Behavior {"Behavior"}
	
	BehaviorTree											-> Root {"Root"} %% workaround for GMF phantom node bug
	
	{nodes:Node ";;"}+ (";" child:BehaviorTree)?			-> BehaviorTree {"AtomicSequence"}
	{nodes:Node ";;"}+ "#N" "{" children:BehaviorTree* "}" 	-> BehaviorTree {"AlternativeBranch"}
	{nodes:Node ";;"}+ "#P" "{" children:BehaviorTree* "}" 	-> BehaviorTree {"ParallelBranch"}

	ID TraceabilityStatus ID INT NodeLabel? Operator		-> Node {"StandardNode"}
	"_" Label? Operator										-> Node {"EmptyNode"}
	
  lexical syntax
  	
  	StateRealisation:"#S"	-> BehaviorType
	Selection:"#L"			-> BehaviorType
	Event:"#E"				-> BehaviorType
	Guard:"#G"				-> BehaviorType
	IIEvent:"#II"			-> BehaviorType
	IOEvent:"#IO"			-> BehaviorType
	EIEvent:"#EI"			-> BehaviorType
	EOEvent:"#EO"			-> BehaviorType
	Assertion:"#A"			-> BehaviorType
  	
  	None:""					-> TraceabilityStatus
  	Implied:"+"				-> TraceabilityStatus
	Missing:"-"				-> TraceabilityStatus
	Updated:"++"			-> TraceabilityStatus 
	Deleted:"--"			-> TraceabilityStatus
	Refinement:"+-"			-> TraceabilityStatus
  	
  	None:""					-> Operator
	BranchKill:"--"			-> Operator
	Conjunction:"&"			-> Operator
	Disjunction:"|"			-> Operator
	May:"%"					-> Operator
	Reference:"=>"			-> Operator
	Reversion:"^"			-> Operator
	StartNew:"^^"			-> Operator
	Synchronisation:"="		-> Operator
	XOR:"XOR"				-> Operator
	
  lexical syntax
		
	"XOR" 	-> ID {reject}	