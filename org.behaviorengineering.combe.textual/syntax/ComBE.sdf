%% Grammar for the ComBE language
%% By default, based on an example "entities" syntax
module ComBE

imports Common

exports

  context-free start-symbols
  
    Start

  context-free syntax
  
    "#RT" Requirement* Component* "#T" BehaviorTree?	-> Start {"Specification"}
    
    Requirement@=ID label:ID					-> Requirement {"Requirement"}
    
	"#C" Component@=ID label:ID Behavior*		-> Component {"StandardComponent"}
	"#SC" Component@=ID label:ID Behavior*		-> Component {"SystemComponent"}
	"#S" Behavior@=INT label:ID 				-> Behavior {"Behavior"}
	
	{Node	";"}+								-> BehaviorTree {"BehaviorTree"}
	
	Requirement@ID*	Component@ID Behavior@INT										-> Node {"SequentilNode", prefer}
	Requirement@ID*	Component@ID Behavior@INT "#N" "{" choices:BehaviorTree* "}" 	-> Node {"AlternativeBranch"}
	Requirement@ID*	Component@ID Behavior@INT "#P" "{" processes:BehaviorTree* "}" 	-> Node {"ParallelBranch"}
	
	Requirement@ID*	Component@ID Behavior@INT										-> AtomicNode {"AtomicNode"}
	{AtomicNode	";;"}+																-> Node {"AtomicSequence"}
	
	

