
regular tree grammar
  start Start
  productions
    OptLabel0               -> <some>(Label)
    OptLabel0               -> <none>()
    OptNodeLabel0           -> <some>(NodeLabel)
    OptNodeLabel0           -> <none>()
    ListStarOfBehaviorTree0 -> ListPlusOfBehaviorTree0
    ListStarOfBehaviorTree0 -> <nil>()
    ListStarOfBehaviorTree0 -> <conc>(ListStarOfBehaviorTree0,ListStarOfBehaviorTree0)
    ListPlusOfBehaviorTree0 -> <conc>(ListStarOfBehaviorTree0,ListPlusOfBehaviorTree0)
    ListPlusOfBehaviorTree0 -> <conc>(ListPlusOfBehaviorTree0,ListStarOfBehaviorTree0)
    ListPlusOfBehaviorTree0 -> <conc>(ListPlusOfBehaviorTree0,ListPlusOfBehaviorTree0)
    ListPlusOfBehaviorTree0 -> <cons>(BehaviorTree,ListStarOfBehaviorTree0)
    ListStarOfNode0         -> ListPlusOfNode0
    ListStarOfNode0         -> <nil>()
    ListStarOfNode0         -> <conc>(ListStarOfNode0,ListStarOfNode0)
    ListPlusOfNode0         -> <conc>(ListStarOfNode0,ListPlusOfNode0)
    ListPlusOfNode0         -> <conc>(ListPlusOfNode0,ListStarOfNode0)
    ListPlusOfNode0         -> <conc>(ListPlusOfNode0,ListPlusOfNode0)
    ListPlusOfNode0         -> Node
    BehaviorTree0           -> <(1)>(BehaviorTree)
    OptBehaviorTree0        -> <some>(BehaviorTree0)
    OptBehaviorTree0        -> <none>()
    ListStarOfBehavior0     -> ListPlusOfBehavior0
    ListStarOfBehavior0     -> <nil>()
    ListStarOfBehavior0     -> <conc>(ListStarOfBehavior0,ListStarOfBehavior0)
    ListPlusOfBehavior0     -> <conc>(ListStarOfBehavior0,ListPlusOfBehavior0)
    ListPlusOfBehavior0     -> <conc>(ListPlusOfBehavior0,ListStarOfBehavior0)
    ListPlusOfBehavior0     -> <conc>(ListPlusOfBehavior0,ListPlusOfBehavior0)
    ListPlusOfBehavior0     -> <cons>(Behavior,ListStarOfBehavior0)
    ListStarOfBehaviorSeq0  -> ListPlusOfBehaviorSeq0
    ListStarOfBehaviorSeq0  -> <nil>()
    ListStarOfBehaviorSeq0  -> <conc>(ListStarOfBehaviorSeq0,ListStarOfBehaviorSeq0)
    ListPlusOfBehaviorSeq0  -> <conc>(ListStarOfBehaviorSeq0,ListPlusOfBehaviorSeq0)
    ListPlusOfBehaviorSeq0  -> <conc>(ListPlusOfBehaviorSeq0,ListStarOfBehaviorSeq0)
    ListPlusOfBehaviorSeq0  -> <conc>(ListPlusOfBehaviorSeq0,ListPlusOfBehaviorSeq0)
    ListPlusOfBehaviorSeq0  -> <cons>(BehaviorSeq,ListStarOfBehaviorSeq0)
    Root0                   -> <(1)>(Root)
    OptRoot1                -> <some>(Root0)
    OptRoot1                -> <none>()
    ListStarOfComponent0    -> ListPlusOfComponent0
    ListStarOfComponent0    -> <nil>()
    ListStarOfComponent0    -> <conc>(ListStarOfComponent0,ListStarOfComponent0)
    ListPlusOfComponent0    -> <conc>(ListStarOfComponent0,ListPlusOfComponent0)
    ListPlusOfComponent0    -> <conc>(ListPlusOfComponent0,ListStarOfComponent0)
    ListPlusOfComponent0    -> <conc>(ListPlusOfComponent0,ListPlusOfComponent0)
    ListPlusOfComponent0    -> <cons>(Component,ListStarOfComponent0)
    ListStarOfRequirement0  -> ListPlusOfRequirement0
    ListStarOfRequirement0  -> <nil>()
    ListStarOfRequirement0  -> <conc>(ListStarOfRequirement0,ListStarOfRequirement0)
    ListPlusOfRequirement0  -> <conc>(ListStarOfRequirement0,ListPlusOfRequirement0)
    ListPlusOfRequirement0  -> <conc>(ListPlusOfRequirement0,ListStarOfRequirement0)
    ListPlusOfRequirement0  -> <conc>(ListPlusOfRequirement0,ListPlusOfRequirement0)
    ListPlusOfRequirement0  -> <cons>(Requirement,ListStarOfRequirement0)
    ListStarOfStringChar0   -> <string>
    ListPlusOfStringChar0   -> <string>
    OptLit0                 -> <string>
    Node                    -> EmptyNode(OptLabel0,Operator)
    Node                    -> StandardNode(ID,TraceabilityStatus,ID,INT,OptNodeLabel0,Operator)
    BehaviorTree            -> ParallelBranch(ListPlusOfNode0,ListStarOfBehaviorTree0)
    BehaviorTree            -> AlternativeBranch(ListPlusOfNode0,ListStarOfBehaviorTree0)
    BehaviorTree            -> AtomicSequence(ListPlusOfNode0,OptBehaviorTree0)
    Root                    -> Root(BehaviorTree)
    Behavior                -> Behavior(INT,Label)
    BehaviorSeq             -> BehaviorSeq(BehaviorType,ListStarOfBehavior0)
    Component               -> SystemComponent(ID,Label,ListStarOfBehaviorSeq0)
    Component               -> StandardComponent(ID,Label,ListStarOfBehaviorSeq0)
    Requirement             -> Requirement(ID,Label)
    Start                   -> Specification(ListStarOfRequirement0,ListStarOfComponent0,OptRoot1)
    Operator                -> <string>
    TraceabilityStatus      -> <string>
    BehaviorType            -> <string>
    EOF                     -> <string>
    CommentChar             -> <string>
    BackSlashChar           -> <string>
    StringChar              -> <string>
    STRING                  -> <string>
    INT                     -> <string>
    NodeLabel               -> <string>
    Label                   -> <string>
    ID                      -> <string>
