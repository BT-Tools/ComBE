module names

imports
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/properties/-
  lib/runtime/types/-
  lib/runtime/editor/-
  include/ComBE


signature
  constructors
    NablNsRequirement : Namespace
    NablNsComponent   : Namespace
    NablNsBehavior    : Namespace


rules

  nabl-scoping-site =
    ?Specification(_, _, _)
    ; origin-track-forced(
        nabl-scope(
        | [NablNsRequirement(), NablNsComponent()]
        )
      |
      )

  nabl-get-scope =
    ?Specification(_, _, _)
    ; ![NablNsRequirement(), NablNsComponent()]

  nabl-get-name :
    Requirement(x, _) -> x

  nabl-name-apply(s) =
    Requirement(s, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, partition__, uniques__, uri__, states__) =
    ?Requirement(x, _)
    ; origin-track-forced(
        Requirement(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , partition__
          , uniques__
          , uri__
          , uri__
          , NablNsRequirement()
          , Unique()
          , Current()
          , []
          , []
          )
        , id
        )
        ; match(child-uris__|c-uri1__)
        ; match(sibl-uris__|s-uri1__)
        ; match(implicits__|[])
      |
      )

  nabl-get-scope =
    ?StandardComponent(x, _, _)
    ; ![NablNsBehavior()]

  nabl-get-name :
    StandardComponent(x, _, _) -> x

  nabl-name-apply(s) =
    StandardComponent(s, id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, partition__, uniques__, uri__, states__) =
    ?StandardComponent(x, _, _)
    ; origin-track-forced(
        StandardComponent(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , partition__
          , uniques__
          , uri__
          , uri__
          , NablNsComponent()
          , Unique()
          , Current()
          , [NablNsBehavior()]
          , []
          )
        , id
        , id
        )
        ; match(child-uris__|c-uri1__)
        ; match(sibl-uris__|s-uri1__)
        ; match(implicits__|[])
      |
      )

  nabl-get-scope =
    ?SystemComponent(x, _, _)
    ; ![NablNsBehavior()]

  nabl-get-name :
    SystemComponent(x, _, _) -> x

  nabl-name-apply(s) =
    SystemComponent(s, id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, partition__, uniques__, uri__, states__) =
    ?SystemComponent(x, _, _)
    ; origin-track-forced(
        SystemComponent(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , partition__
          , uniques__
          , uri__
          , uri__
          , NablNsComponent()
          , Unique()
          , Current()
          , [NablNsBehavior()]
          , []
          )
        , id
        , id
        )
        ; match(child-uris__|c-uri1__)
        ; match(sibl-uris__|s-uri1__)
        ; match(implicits__|[])
      |
      )

  nabl-get-name :
    Behavior(x, _) -> x

  nabl-name-apply(s) =
    Behavior(s, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, partition__, uniques__, uri__, states__) =
    ?Behavior(x, _)
    ; origin-track-forced(
        Behavior(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , partition__
          , uniques__
          , uri__
          , uri__
          , NablNsBehavior()
          , Unique()
          , Current()
          , []
          , []
          )
        , id
        )
        ; match(child-uris__|c-uri1__)
        ; match(sibl-uris__|s-uri1__)
        ; match(implicits__|[])
      |
      )

  nabl-use-site(|lang__, partition__, uniques__, uris__, states__) =
    ?StandardNode(r, _, c, b, _)
    ; origin-track-forced(
        StandardNode(
          nabl-use(
          | lang__
          , partition__
          , uniques__
          , uris__
          , [ UseCandidate(
                NablNsRequirement()
              , []
              , Current()
              , True()
              , []
              )
            ]
          )
        , id
        , id
        , id
        , id
        )
        ; StandardNode(
            id
          , id
          , nabl-use(
            | lang__
            , partition__
            , uniques__
            , uris__
            , [ UseCandidate(
                  NablNsComponent()
                , []
                , Current()
                , True()
                , []
                )
              ]
            )
          , id
          , id
          )
        ; StandardNode(
            id
          , id
          , id
          , nabl-use(
            | lang__
            , partition__
            , uniques__
            , uris__
            , [ UseCandidate(
                  NablNsBehavior()
                , []
                , Current()
                , True()
                , []
                )
              ]
            )
          , id
          )
      |
      )